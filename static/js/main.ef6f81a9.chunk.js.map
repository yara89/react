{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","xIsNext","length","slice","calculateWinner","setState","concat","status","current","winner","moves","map","step","move","desc","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById","Clock","date","toLocaleTimeString","setInterval","Date"],"mappings":"wNAIA,SAASA,EAAOC,GACd,OACE,wBAAQC,UAAU,SAASC,QAASF,EAAME,QAA1C,SACGF,EAAMG,Q,IAMPC,E,kKACJ,SAAaC,GAAI,IAAD,OACd,OACQ,cAACN,EAAD,CAAQI,MAAOG,KAAKN,MAAMO,QAAQF,GAClCH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,oBAK5C,WACE,OACE,gCACE,sBAAKJ,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKP,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKP,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,a,GAzBTC,IAAMC,WAgCpBC,E,kDACJ,WAAYX,GAAQ,IAAD,8BACjB,cAAMA,IACDY,MAAQ,CACXC,QAAS,CAAC,CACRN,QAASO,MAAM,GAAGC,KAAK,QAEzBC,SAAS,GANM,E,+CAUnB,SAAYX,GACV,IAAMQ,EAAUP,KAAKM,MAAMC,QAErBN,EADUM,EAAQA,EAAQI,OAAS,GACjBV,QAAQW,QAC5BC,EAAgBZ,IAAYA,EAAQF,KAGxCE,EAAQF,GAAKC,KAAKM,MAAMI,QAAU,IAAM,IACxCV,KAAKc,SAAS,CACdP,QAASA,EAAQQ,OAAO,CAAC,CACvBd,QAASA,KAEXS,SAAUV,KAAKM,MAAMI,a,oBAIvB,WAAU,IAmBJM,EAnBG,OAEDT,EAAUP,KAAKM,MAAMC,QACrBU,EAAUV,EAAQA,EAAQI,OAAS,GACnCO,EAASL,EAAgBI,EAAQhB,SAGjCkB,EAAQZ,EAAQa,KAAI,SAACC,EAAMC,GAC/B,IAAMC,EAAOD,EACX,eAAiBA,EACjB,mBACF,OACE,6BACE,wBAAQ1B,QAAS,kBAAM,EAAK4B,OAAOL,IAAnC,SAA4CI,SAclD,OANEP,EADEE,EACO,kBAAoBA,EAEpB,iBAAmBlB,KAAKM,MAAMI,QAAU,IAAM,KAKvD,sBAAKf,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACG,EAAD,CACIG,QAASgB,EAAQhB,QACjBL,QAAS,SAACG,GAAD,OAAO,EAAK0B,YAAY1B,QAGvC,sBAAKJ,UAAU,YAAf,UACE,8BAAMqB,IACN,6BAAKG,c,GAhEIhB,IAAMC,WAgFzB,SAASS,EAAgBZ,GAWvB,IAVA,IAAMyB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA3B,EAAI,EAAGA,EAAI2B,EAAMf,OAAQZ,IAAK,CACrC,kBAAkB2B,EAAM3B,GAAxB,GAAO4B,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAI5B,EAAQ0B,IAAM1B,EAAQ0B,KAAO1B,EAAQ2B,IAAM3B,EAAQ0B,KAAO1B,EAAQ4B,GACpE,OAAO5B,EAAQ0B,GAGnB,OAAO,KAtBTG,IAASC,OACP,cAAC1B,EAAD,IACA2B,SAASC,eAAe,S,IAwBpBC,E,4JACJ,WACE,OACE,gCACE,iDACA,+CAAkBlC,KAAKN,MAAMyC,KAAKC,qBAAlC,c,GALYjC,IAAMC,WAkB1BiC,aAPA,WACEP,IAASC,OACP,cAACG,EAAD,CAAOC,KAAM,IAAIG,OACjBN,SAASC,eAAe,YAIV,O","file":"static/js/main.ef6f81a9.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n            <Square value={this.props.squares[i]}\n            onClick={() => this.props.onClick(i)}\n            />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      xIsNext: true,\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n    history: history.concat([{\n      squares: squares\n    }]),\n    xIsNext: !this.state.xIsNext,\n   });\n  }\n\n  render() {\n    \n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const winner = calculateWinner(current.squares);\n    \n    // return to previous moves from saved game history\n    const moves = history.map((step, move) => {\n      const desc = move ?\n        'Go to move #' + move :\n        'Go to game start';\n      return (\n        <li>\n          <button onClick={() => this.jumpTo(moves)}>{desc}</button>\n        </li>\n      );\n    });\n\n    // player status, winner is?\n    let status;\n    if (winner) {\n      status = 'the Winner is: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n              squares={current.squares}\n              onClick={(i) => this.handleClick(i)}\n           />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n// ========================================\n\nReactDOM.render(\n  <Game />, \n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\n\nclass Clock extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>Hello, friends!</h1>\n        <h2> The time is {this.props.date.toLocaleTimeString()}.</h2>\n      </div>\n    );\n  }\n}\n\nfunction tick() {\n  ReactDOM.render(\n    <Clock date={new Date()} />,\n    document.getElementById('root1')\n  );\n}\n\nsetInterval(tick, 1000);\n"],"sourceRoot":""}